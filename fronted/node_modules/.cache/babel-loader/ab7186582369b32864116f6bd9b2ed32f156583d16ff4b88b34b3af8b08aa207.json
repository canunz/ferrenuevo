{"ast":null,"code":"import { productosAPI } from './api';\nexport const servicioProductos = {\n  // Obtener todos los productos\n  obtenerTodos: async (params = {}) => {\n    try {\n      const response = await productosAPI.obtenerTodos(params);\n      return response;\n    } catch (error) {\n      console.error('Error al obtener productos:', error);\n      throw error;\n    }\n  },\n  // Obtener producto por ID\n  obtenerPorId: async id => {\n    try {\n      const response = await productosAPI.obtenerPorId(id);\n      return response;\n    } catch (error) {\n      console.error('Error al obtener producto:', error);\n      throw error;\n    }\n  },\n  // Crear nuevo producto\n  crear: async data => {\n    try {\n      const response = await productosAPI.crear(data);\n      return response;\n    } catch (error) {\n      console.error('Error al crear producto:', error);\n      throw error;\n    }\n  },\n  // Actualizar producto\n  actualizar: async (id, data) => {\n    try {\n      const response = await productosAPI.actualizar(id, data);\n      return response;\n    } catch (error) {\n      console.error('Error al actualizar producto:', error);\n      throw error;\n    }\n  },\n  // Eliminar producto\n  eliminar: async id => {\n    try {\n      const response = await productosAPI.eliminar(id);\n      return response;\n    } catch (error) {\n      console.error('Error al eliminar producto:', error);\n      throw error;\n    }\n  },\n  // Buscar productos\n  buscar: async (query, filtros = {}) => {\n    try {\n      // Usar el endpoint de búsqueda del backend\n      const params = {\n        q: query,\n        ...filtros\n      };\n      const response = await productosAPI.obtenerTodos(params);\n      return response;\n    } catch (error) {\n      console.error('Error al buscar productos:', error);\n      throw error;\n    }\n  },\n  // Obtener categorías\n  obtenerCategorias: async () => {\n    try {\n      const response = await productosAPI.obtenerCategorias();\n      return response;\n    } catch (error) {\n      console.error('Error al obtener categorías:', error);\n      throw error;\n    }\n  },\n  // Obtener marcas\n  obtenerMarcas: async () => {\n    try {\n      const response = await productosAPI.obtenerMarcas();\n      return response;\n    } catch (error) {\n      console.error('Error al obtener marcas:', error);\n      throw error;\n    }\n  }\n};","map":{"version":3,"names":["productosAPI","servicioProductos","obtenerTodos","params","response","error","console","obtenerPorId","id","crear","data","actualizar","eliminar","buscar","query","filtros","q","obtenerCategorias","obtenerMarcas"],"sources":["C:/ferrenuevo/fronted/src/servicios/servicioProductos.js"],"sourcesContent":["import { productosAPI } from './api';\r\n\r\nexport const servicioProductos = {\r\n  // Obtener todos los productos\r\n  obtenerTodos: async (params = {}) => {\r\n    try {\r\n      const response = await productosAPI.obtenerTodos(params);\r\n      return response;\r\n    } catch (error) {\r\n      console.error('Error al obtener productos:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // Obtener producto por ID\r\n  obtenerPorId: async (id) => {\r\n    try {\r\n      const response = await productosAPI.obtenerPorId(id);\r\n      return response;\r\n    } catch (error) {\r\n      console.error('Error al obtener producto:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // Crear nuevo producto\r\n  crear: async (data) => {\r\n    try {\r\n      const response = await productosAPI.crear(data);\r\n      return response;\r\n    } catch (error) {\r\n      console.error('Error al crear producto:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // Actualizar producto\r\n  actualizar: async (id, data) => {\r\n    try {\r\n      const response = await productosAPI.actualizar(id, data);\r\n      return response;\r\n    } catch (error) {\r\n      console.error('Error al actualizar producto:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // Eliminar producto\r\n  eliminar: async (id) => {\r\n    try {\r\n      const response = await productosAPI.eliminar(id);\r\n      return response;\r\n    } catch (error) {\r\n      console.error('Error al eliminar producto:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // Buscar productos\r\n  buscar: async (query, filtros = {}) => {\r\n    try {\r\n      // Usar el endpoint de búsqueda del backend\r\n      const params = { q: query, ...filtros };\r\n      const response = await productosAPI.obtenerTodos(params);\r\n      return response;\r\n    } catch (error) {\r\n      console.error('Error al buscar productos:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // Obtener categorías\r\n  obtenerCategorias: async () => {\r\n    try {\r\n      const response = await productosAPI.obtenerCategorias();\r\n      return response;\r\n    } catch (error) {\r\n      console.error('Error al obtener categorías:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // Obtener marcas\r\n  obtenerMarcas: async () => {\r\n    try {\r\n      const response = await productosAPI.obtenerMarcas();\r\n      return response;\r\n    } catch (error) {\r\n      console.error('Error al obtener marcas:', error);\r\n      throw error;\r\n    }\r\n  },\r\n};\r\n"],"mappings":"AAAA,SAASA,YAAY,QAAQ,OAAO;AAEpC,OAAO,MAAMC,iBAAiB,GAAG;EAC/B;EACAC,YAAY,EAAE,MAAAA,CAAOC,MAAM,GAAG,CAAC,CAAC,KAAK;IACnC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMJ,YAAY,CAACE,YAAY,CAACC,MAAM,CAAC;MACxD,OAAOC,QAAQ;IACjB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACnD,MAAMA,KAAK;IACb;EACF,CAAC;EAED;EACAE,YAAY,EAAE,MAAOC,EAAE,IAAK;IAC1B,IAAI;MACF,MAAMJ,QAAQ,GAAG,MAAMJ,YAAY,CAACO,YAAY,CAACC,EAAE,CAAC;MACpD,OAAOJ,QAAQ;IACjB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MAClD,MAAMA,KAAK;IACb;EACF,CAAC;EAED;EACAI,KAAK,EAAE,MAAOC,IAAI,IAAK;IACrB,IAAI;MACF,MAAMN,QAAQ,GAAG,MAAMJ,YAAY,CAACS,KAAK,CAACC,IAAI,CAAC;MAC/C,OAAON,QAAQ;IACjB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAChD,MAAMA,KAAK;IACb;EACF,CAAC;EAED;EACAM,UAAU,EAAE,MAAAA,CAAOH,EAAE,EAAEE,IAAI,KAAK;IAC9B,IAAI;MACF,MAAMN,QAAQ,GAAG,MAAMJ,YAAY,CAACW,UAAU,CAACH,EAAE,EAAEE,IAAI,CAAC;MACxD,OAAON,QAAQ;IACjB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;MACrD,MAAMA,KAAK;IACb;EACF,CAAC;EAED;EACAO,QAAQ,EAAE,MAAOJ,EAAE,IAAK;IACtB,IAAI;MACF,MAAMJ,QAAQ,GAAG,MAAMJ,YAAY,CAACY,QAAQ,CAACJ,EAAE,CAAC;MAChD,OAAOJ,QAAQ;IACjB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACnD,MAAMA,KAAK;IACb;EACF,CAAC;EAED;EACAQ,MAAM,EAAE,MAAAA,CAAOC,KAAK,EAAEC,OAAO,GAAG,CAAC,CAAC,KAAK;IACrC,IAAI;MACF;MACA,MAAMZ,MAAM,GAAG;QAAEa,CAAC,EAAEF,KAAK;QAAE,GAAGC;MAAQ,CAAC;MACvC,MAAMX,QAAQ,GAAG,MAAMJ,YAAY,CAACE,YAAY,CAACC,MAAM,CAAC;MACxD,OAAOC,QAAQ;IACjB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MAClD,MAAMA,KAAK;IACb;EACF,CAAC;EAED;EACAY,iBAAiB,EAAE,MAAAA,CAAA,KAAY;IAC7B,IAAI;MACF,MAAMb,QAAQ,GAAG,MAAMJ,YAAY,CAACiB,iBAAiB,CAAC,CAAC;MACvD,OAAOb,QAAQ;IACjB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;MACpD,MAAMA,KAAK;IACb;EACF,CAAC;EAED;EACAa,aAAa,EAAE,MAAAA,CAAA,KAAY;IACzB,IAAI;MACF,MAAMd,QAAQ,GAAG,MAAMJ,YAAY,CAACkB,aAAa,CAAC,CAAC;MACnD,OAAOd,QAAQ;IACjB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAChD,MAAMA,KAAK;IACb;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}