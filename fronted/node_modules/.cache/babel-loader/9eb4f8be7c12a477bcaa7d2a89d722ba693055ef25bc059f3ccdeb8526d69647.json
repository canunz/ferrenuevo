{"ast":null,"code":"import api from'./api';export const servicioClientes={// Obtener todos los clientes\nobtenerTodos:async function(){let params=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};// Filtra los parámetros vacíos\nconst cleanParams=Object.fromEntries(Object.entries(params).filter(_ref=>{let[_,v]=_ref;return v!==undefined&&v!=='';}));const response=await api.get('/clientes',{params:cleanParams});return response.data;},// Obtener cliente por ID\nobtenerPorId:async id=>{const response=await api.get(\"/clientes/\".concat(id));return response.data.data;},// Crear nuevo cliente\ncrear:async data=>{const response=await api.post('/clientes',data);return response.data;},// Actualizar cliente\nactualizar:async(id,data)=>{const response=await api.put(\"/clientes/\".concat(id),data);return response.data;},// Eliminar cliente\neliminar:async id=>{const response=await api.delete(\"/clientes/\".concat(id));return response.data;},// Buscar clientes\nbuscar:async query=>{const response=await api.get('/clientes/buscar',{params:{q:query}});return response.data;},// Obtener historial de pedidos del cliente\nobtenerHistorial:async id=>{const response=await api.get(\"/clientes/\".concat(id,\"/historial\"));return response.data;},// Obtener dirección de envío de un cliente\nobtenerDireccionEnvio:async id=>{const response=await api.get(\"/clientes/\".concat(id,\"/direccion-envio\"));return response.data.data;},// Actualizar o crear dirección de envío de un cliente\nactualizarDireccionEnvio:async(id,data)=>{const response=await api.put(\"/clientes/\".concat(id,\"/direccion-envio\"),data);return response.data.data;},// Listar todos los clientes (para compatibilidad)\nlistar:async()=>{const response=await api.get('/clientes');return response.data;}};","map":{"version":3,"names":["api","servicioClientes","obtenerTodos","params","arguments","length","undefined","cleanParams","Object","fromEntries","entries","filter","_ref","_","v","response","get","data","obtenerPorId","id","concat","crear","post","actualizar","put","eliminar","delete","buscar","query","q","obtenerHistorial","obtenerDireccionEnvio","actualizarDireccionEnvio","listar"],"sources":["C:/ferrenuevo/fronted/src/servicios/servicioClientes.js"],"sourcesContent":["import api from './api';\r\n\r\nexport const servicioClientes = {\r\n  // Obtener todos los clientes\r\n  obtenerTodos: async (params = {}) => {\r\n    // Filtra los parámetros vacíos\r\n    const cleanParams = Object.fromEntries(\r\n      Object.entries(params).filter(([_, v]) => v !== undefined && v !== '')\r\n    );\r\n    const response = await api.get('/clientes', { params: cleanParams });\r\n    return response.data;\r\n  },\r\n\r\n  // Obtener cliente por ID\r\n  obtenerPorId: async (id) => {\r\n    const response = await api.get(`/clientes/${id}`);\r\n    return response.data.data;\r\n  },\r\n\r\n  // Crear nuevo cliente\r\n  crear: async (data) => {\r\n    const response = await api.post('/clientes', data);\r\n    return response.data;\r\n  },\r\n\r\n  // Actualizar cliente\r\n  actualizar: async (id, data) => {\r\n    const response = await api.put(`/clientes/${id}`, data);\r\n    return response.data;\r\n  },\r\n\r\n  // Eliminar cliente\r\n  eliminar: async (id) => {\r\n    const response = await api.delete(`/clientes/${id}`);\r\n    return response.data;\r\n  },\r\n\r\n  // Buscar clientes\r\n  buscar: async (query) => {\r\n    const response = await api.get('/clientes/buscar', { params: { q: query } });\r\n    return response.data;\r\n  },\r\n\r\n  // Obtener historial de pedidos del cliente\r\n  obtenerHistorial: async (id) => {\r\n    const response = await api.get(`/clientes/${id}/historial`);\r\n    return response.data;\r\n  },\r\n\r\n  // Obtener dirección de envío de un cliente\r\n  obtenerDireccionEnvio: async (id) => {\r\n    const response = await api.get(`/clientes/${id}/direccion-envio`);\r\n    return response.data.data;\r\n  },\r\n\r\n  // Actualizar o crear dirección de envío de un cliente\r\n  actualizarDireccionEnvio: async (id, data) => {\r\n    const response = await api.put(`/clientes/${id}/direccion-envio`, data);\r\n    return response.data.data;\r\n  },\r\n\r\n  // Listar todos los clientes (para compatibilidad)\r\n  listar: async () => {\r\n    const response = await api.get('/clientes');\r\n    return response.data;\r\n  }\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}