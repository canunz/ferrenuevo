{"ast":null,"code":"import _objectSpread from\"C:/ferrenuevo/fronted/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";// ==========================================\n// src/servicios/api.js - FRONTEND CORREGIDO\n// ==========================================\nimport axios from'axios';// Configuraci√≥n de la API\nconst API_BASE_URL='http://localhost:3002/api/v1';// Configuraci√≥n base de axios\nconst api=axios.create({baseURL:API_BASE_URL,headers:{'Content-Type':'application/json'}});// Agrega el token a cada petici√≥n si existe\napi.interceptors.request.use(config=>{const token=localStorage.getItem('token');if(token){config.headers['Authorization']=\"Bearer \".concat(token);}return config;},error=>Promise.reject(error));// Funci√≥n helper para hacer requests con mejor manejo de errores\nexport const apiRequest=async function(endpoint){let options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};const url=\"\".concat(API_BASE_URL).concat(endpoint);console.log(\"\\uD83D\\uDD04 API Request: \".concat(options.method||'GET',\" \").concat(url));const defaultOptions=_objectSpread({method:'GET',headers:{'Content-Type':'application/json','Accept':'application/json'},mode:'cors',// Importante para CORS\ncredentials:'include'},options);// Agregar body solo si no es GET\nif(options.body&&defaultOptions.method!=='GET'){defaultOptions.body=JSON.stringify(options.body);}try{console.log(\"\\uD83D\\uDCE1 Enviando request a: \".concat(url));console.log(\"\\uD83D\\uDD27 Opciones:\",defaultOptions);const response=await fetch(url,defaultOptions);console.log(\"\\uD83D\\uDCEC Response status: \".concat(response.status));console.log(\"\\uD83D\\uDCEC Response headers:\",response.headers);// Verificar si la respuesta es exitosa\nif(!response.ok){// Intentar obtener el mensaje de error del servidor\nlet errorMessage=\"HTTP \".concat(response.status,\": \").concat(response.statusText);try{const errorData=await response.json();errorMessage=errorData.message||errorData.error||errorMessage;}catch(e){console.log('No se pudo parsear el error como JSON');}throw new Error(errorMessage);}// Intentar parsear la respuesta como JSON\nconst data=await response.json();console.log(\"\\u2705 API Response exitosa:\",data);return data;}catch(error){console.error(\"\\u274C API Error: \".concat(endpoint),error);// Mejorar los mensajes de error para el usuario\nif(error.name==='TypeError'&&error.message.includes('Failed to fetch')){throw new Error('No se puede conectar al servidor. Verifica que el backend est√© corriendo en http://localhost:3002');}if(error.name==='AbortError'){throw new Error('La petici√≥n tard√≥ demasiado tiempo. Int√©ntalo de nuevo.');}// Re-lanzar el error original si no es uno conocido\nthrow error;}};// Funci√≥n para probar conexi√≥n con el backend\nexport const testBackendConnection=async()=>{try{const response=await api.get('/test');return response.data;}catch(error){console.error('Error conectando con el backend:',error);throw error;}};// Funci√≥n espec√≠fica para verificar la salud del servidor\nconst verificarServidor=async()=>{try{console.log('üè• Verificando salud del servidor...');const response=await fetch('http://localhost:3002/health',{method:'GET',mode:'cors',headers:{'Accept':'application/json'}});if(response.ok){const data=await response.json();console.log('‚úÖ Servidor funcionando:',data);return{funcionando:true,data};}else{console.log('‚ö†Ô∏è Servidor responde pero con error:',response.status);return{funcionando:false,error:\"HTTP \".concat(response.status)};}}catch(error){console.error('‚ùå No se puede conectar al servidor:',error);return{funcionando:false,error:error.message};}};// API PRODUCTOS (exportaci√≥n nombrada)\nexport const productosAPI={obtenerTodos:async function(){let filtros=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};const params=new URLSearchParams();Object.keys(filtros).forEach(key=>{if(filtros[key])params.append(key,filtros[key]);});const endpoint=\"/productos\".concat(params.toString()?\"?\".concat(params.toString()):'');return await apiRequest(endpoint);},obtenerPorId:async id=>{return await apiRequest(\"/productos/\".concat(id));},crear:async producto=>{return await apiRequest('/productos',{method:'POST',body:producto});},actualizar:async(id,producto)=>{return await apiRequest(\"/productos/\".concat(id),{method:'PUT',body:producto});},eliminar:async id=>{return await apiRequest(\"/productos/\".concat(id),{method:'DELETE'});},obtenerCategorias:async()=>{return await apiRequest('/productos/categorias');},obtenerMarcas:async()=>{return await apiRequest('/productos/marcas');},actualizarDescuento:async(id,descuento)=>{return await apiRequest(\"/productos/\".concat(id,\"/descuento\"),{method:'PUT',body:{descuento}});},actualizarDescuentoCategoria:async(categoria_id,descuento)=>{return await apiRequest('/productos/descuento-categoria',{method:'POST',body:{categoria_id,descuento}});},actualizarDescuentoMarca:async(marca_id,descuento)=>{return await apiRequest('/productos/descuento-marca',{method:'POST',body:{marca_id,descuento}});},cargarMasiva:async archivoCsv=>{const formData=new FormData();formData.append('archivo',archivoCsv);// Usar fetch directamente para enviar multipart/form-data\nconst response=await fetch(\"\".concat(API_BASE_URL,\"/productos/carga-masiva\"),{method:'POST',body:formData,headers:{// No poner Content-Type, el navegador lo setea autom√°ticamente\n'Authorization':\"Bearer \".concat(localStorage.getItem('token')||'')}});if(!response.ok){const errorData=await response.json().catch(()=>({}));throw new Error(errorData.message||'Error en la carga masiva');}return await response.json();}};// API SISTEMA (exportaci√≥n nombrada)\nexport const sistemaAPI={healthCheck:async()=>{const response=await fetch('http://localhost:3002/health');return await response.json();},test:async()=>{return await apiRequest('/test');},verificarServidor:verificarServidor};// API CLIENTES\nexport const clientesAPI={obtenerTodos:async function(){let filtros=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};const params=new URLSearchParams();Object.keys(filtros).forEach(key=>{if(filtros[key])params.append(key,filtros[key]);});const endpoint=\"/clientes\".concat(params.toString()?\"?\".concat(params.toString()):'');return await apiRequest(endpoint);},obtenerPorId:async id=>{return await apiRequest(\"/clientes/\".concat(id));},crear:async cliente=>{return await apiRequest('/clientes',{method:'POST',body:cliente});},actualizar:async(id,cliente)=>{return await apiRequest(\"/clientes/\".concat(id),{method:'PUT',body:cliente});},eliminar:async id=>{return await apiRequest(\"/clientes/\".concat(id),{method:'DELETE'});}};// API AUTH\nexport const authAPI={login:async credenciales=>{return await apiRequest('/auth/login',{method:'POST',body:credenciales});},registro:async datos=>{return await apiRequest('/auth/registro',{method:'POST',body:datos});},obtenerPerfil:async()=>{return await apiRequest('/auth/perfil');},actualizarPerfil:async datos=>{return await apiRequest('/auth/perfil',{method:'PUT',body:datos});}};// API PEDIDOS\nexport const pedidosAPI={obtenerTodos:async function(){let filtros=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};const params=new URLSearchParams();Object.keys(filtros).forEach(key=>{if(filtros[key])params.append(key,filtros[key]);});const endpoint=\"/pedidos\".concat(params.toString()?\"?\".concat(params.toString()):'');return await apiRequest(endpoint);},obtenerPorId:async id=>{return await apiRequest(\"/pedidos/\".concat(id));},crear:async pedido=>{return await apiRequest('/pedidos',{method:'POST',body:pedido});},actualizar:async(id,pedido)=>{return await apiRequest(\"/pedidos/\".concat(id),{method:'PUT',body:pedido});},cambiarEstado:async(id,estado)=>{return await apiRequest(\"/pedidos/\".concat(id,\"/estado\"),{method:'PUT',body:{estado}});}};// Exportar axios instance para uso directo\nexport default api;","map":{"version":3,"names":["axios","API_BASE_URL","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","concat","error","Promise","reject","apiRequest","endpoint","options","arguments","length","undefined","url","console","log","method","defaultOptions","_objectSpread","mode","credentials","body","JSON","stringify","response","fetch","status","ok","errorMessage","statusText","errorData","json","message","e","Error","data","name","includes","testBackendConnection","get","verificarServidor","funcionando","productosAPI","obtenerTodos","filtros","params","URLSearchParams","Object","keys","forEach","key","append","toString","obtenerPorId","id","crear","producto","actualizar","eliminar","obtenerCategorias","obtenerMarcas","actualizarDescuento","descuento","actualizarDescuentoCategoria","categoria_id","actualizarDescuentoMarca","marca_id","cargarMasiva","archivoCsv","formData","FormData","catch","sistemaAPI","healthCheck","test","clientesAPI","cliente","authAPI","login","credenciales","registro","datos","obtenerPerfil","actualizarPerfil","pedidosAPI","pedido","cambiarEstado","estado"],"sources":["C:/ferrenuevo/fronted/src/servicios/api.js"],"sourcesContent":["// ==========================================\r\n// src/servicios/api.js - FRONTEND CORREGIDO\r\n// ==========================================\r\n\r\nimport axios from 'axios';\r\n\r\n// Configuraci√≥n de la API\r\nconst API_BASE_URL = 'http://localhost:3002/api/v1';\r\n\r\n// Configuraci√≥n base de axios\r\nconst api = axios.create({\r\n  baseURL: API_BASE_URL,\r\n  headers: {\r\n    'Content-Type': 'application/json'\r\n  }\r\n});\r\n\r\n// Agrega el token a cada petici√≥n si existe\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      config.headers['Authorization'] = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => Promise.reject(error)\r\n);\r\n\r\n// Funci√≥n helper para hacer requests con mejor manejo de errores\r\nexport const apiRequest = async (endpoint, options = {}) => {\r\n  const url = `${API_BASE_URL}${endpoint}`;\r\n  \r\n  console.log(`üîÑ API Request: ${options.method || 'GET'} ${url}`);\r\n  \r\n  const defaultOptions = {\r\n    method: 'GET',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      'Accept': 'application/json',\r\n    },\r\n    mode: 'cors', // Importante para CORS\r\n    credentials: 'include', // Para enviar cookies si es necesario\r\n    ...options,\r\n  };\r\n\r\n  // Agregar body solo si no es GET\r\n  if (options.body && defaultOptions.method !== 'GET') {\r\n    defaultOptions.body = JSON.stringify(options.body);\r\n  }\r\n\r\n  try {\r\n    console.log(`üì° Enviando request a: ${url}`);\r\n    console.log(`üîß Opciones:`, defaultOptions);\r\n    \r\n    const response = await fetch(url, defaultOptions);\r\n    \r\n    console.log(`üì¨ Response status: ${response.status}`);\r\n    console.log(`üì¨ Response headers:`, response.headers);\r\n    \r\n    // Verificar si la respuesta es exitosa\r\n    if (!response.ok) {\r\n      // Intentar obtener el mensaje de error del servidor\r\n      let errorMessage = `HTTP ${response.status}: ${response.statusText}`;\r\n      \r\n      try {\r\n        const errorData = await response.json();\r\n        errorMessage = errorData.message || errorData.error || errorMessage;\r\n      } catch (e) {\r\n        console.log('No se pudo parsear el error como JSON');\r\n      }\r\n      \r\n      throw new Error(errorMessage);\r\n    }\r\n\r\n    // Intentar parsear la respuesta como JSON\r\n    const data = await response.json();\r\n    console.log(`‚úÖ API Response exitosa:`, data);\r\n    \r\n    return data;\r\n    \r\n  } catch (error) {\r\n    console.error(`‚ùå API Error: ${endpoint}`, error);\r\n    \r\n    // Mejorar los mensajes de error para el usuario\r\n    if (error.name === 'TypeError' && error.message.includes('Failed to fetch')) {\r\n      throw new Error('No se puede conectar al servidor. Verifica que el backend est√© corriendo en http://localhost:3002');\r\n    }\r\n    \r\n    if (error.name === 'AbortError') {\r\n      throw new Error('La petici√≥n tard√≥ demasiado tiempo. Int√©ntalo de nuevo.');\r\n    }\r\n    \r\n    // Re-lanzar el error original si no es uno conocido\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Funci√≥n para probar conexi√≥n con el backend\r\nexport const testBackendConnection = async () => {\r\n  try {\r\n    const response = await api.get('/test');\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error conectando con el backend:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Funci√≥n espec√≠fica para verificar la salud del servidor\r\nconst verificarServidor = async () => {\r\n  try {\r\n    console.log('üè• Verificando salud del servidor...');\r\n    const response = await fetch('http://localhost:3002/health', {\r\n      method: 'GET',\r\n      mode: 'cors',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n      }\r\n    });\r\n    \r\n    if (response.ok) {\r\n      const data = await response.json();\r\n      console.log('‚úÖ Servidor funcionando:', data);\r\n      return { funcionando: true, data };\r\n    } else {\r\n      console.log('‚ö†Ô∏è Servidor responde pero con error:', response.status);\r\n      return { funcionando: false, error: `HTTP ${response.status}` };\r\n    }\r\n  } catch (error) {\r\n    console.error('‚ùå No se puede conectar al servidor:', error);\r\n    return { funcionando: false, error: error.message };\r\n  }\r\n};\r\n\r\n// API PRODUCTOS (exportaci√≥n nombrada)\r\nexport const productosAPI = {\r\n  obtenerTodos: async (filtros = {}) => {\r\n    const params = new URLSearchParams();\r\n    Object.keys(filtros).forEach(key => {\r\n      if (filtros[key]) params.append(key, filtros[key]);\r\n    });\r\n    \r\n    const endpoint = `/productos${params.toString() ? `?${params.toString()}` : ''}`;\r\n    return await apiRequest(endpoint);\r\n  },\r\n\r\n  obtenerPorId: async (id) => {\r\n    return await apiRequest(`/productos/${id}`);\r\n  },\r\n\r\n  crear: async (producto) => {\r\n    return await apiRequest('/productos', {\r\n      method: 'POST',\r\n      body: producto,\r\n    });\r\n  },\r\n\r\n  actualizar: async (id, producto) => {\r\n    return await apiRequest(`/productos/${id}`, {\r\n      method: 'PUT',\r\n      body: producto,\r\n    });\r\n  },\r\n\r\n  eliminar: async (id) => {\r\n    return await apiRequest(`/productos/${id}`, {\r\n      method: 'DELETE',\r\n    });\r\n  },\r\n\r\n  obtenerCategorias: async () => {\r\n    return await apiRequest('/productos/categorias');\r\n  },\r\n\r\n  obtenerMarcas: async () => {\r\n    return await apiRequest('/productos/marcas');\r\n  },\r\n\r\n  actualizarDescuento: async (id, descuento) => {\r\n    return await apiRequest(`/productos/${id}/descuento`, {\r\n      method: 'PUT',\r\n      body: { descuento }\r\n    });\r\n  },\r\n\r\n  actualizarDescuentoCategoria: async (categoria_id, descuento) => {\r\n    return await apiRequest('/productos/descuento-categoria', {\r\n      method: 'POST',\r\n      body: { categoria_id, descuento }\r\n    });\r\n  },\r\n\r\n  actualizarDescuentoMarca: async (marca_id, descuento) => {\r\n    return await apiRequest('/productos/descuento-marca', {\r\n      method: 'POST',\r\n      body: { marca_id, descuento }\r\n    });\r\n  },\r\n\r\n  cargarMasiva: async (archivoCsv) => {\r\n    const formData = new FormData();\r\n    formData.append('archivo', archivoCsv);\r\n    // Usar fetch directamente para enviar multipart/form-data\r\n    const response = await fetch(`${API_BASE_URL}/productos/carga-masiva`, {\r\n      method: 'POST',\r\n      body: formData,\r\n      headers: {\r\n        // No poner Content-Type, el navegador lo setea autom√°ticamente\r\n        'Authorization': `Bearer ${localStorage.getItem('token') || ''}`\r\n      },\r\n    });\r\n    if (!response.ok) {\r\n      const errorData = await response.json().catch(() => ({}));\r\n      throw new Error(errorData.message || 'Error en la carga masiva');\r\n    }\r\n    return await response.json();\r\n  },\r\n};\r\n\r\n// API SISTEMA (exportaci√≥n nombrada)\r\nexport const sistemaAPI = {\r\n  healthCheck: async () => {\r\n    const response = await fetch('http://localhost:3002/health');\r\n    return await response.json();\r\n  },\r\n  \r\n  test: async () => {\r\n    return await apiRequest('/test');\r\n  },\r\n  \r\n  verificarServidor: verificarServidor,\r\n};\r\n\r\n// API CLIENTES\r\nexport const clientesAPI = {\r\n  obtenerTodos: async (filtros = {}) => {\r\n    const params = new URLSearchParams();\r\n    Object.keys(filtros).forEach(key => {\r\n      if (filtros[key]) params.append(key, filtros[key]);\r\n    });\r\n    \r\n    const endpoint = `/clientes${params.toString() ? `?${params.toString()}` : ''}`;\r\n    return await apiRequest(endpoint);\r\n  },\r\n\r\n  obtenerPorId: async (id) => {\r\n    return await apiRequest(`/clientes/${id}`);\r\n  },\r\n\r\n  crear: async (cliente) => {\r\n    return await apiRequest('/clientes', {\r\n      method: 'POST',\r\n      body: cliente,\r\n    });\r\n  },\r\n\r\n  actualizar: async (id, cliente) => {\r\n    return await apiRequest(`/clientes/${id}`, {\r\n      method: 'PUT',\r\n      body: cliente,\r\n    });\r\n  },\r\n\r\n  eliminar: async (id) => {\r\n    return await apiRequest(`/clientes/${id}`, {\r\n      method: 'DELETE',\r\n    });\r\n  },\r\n};\r\n\r\n// API AUTH\r\nexport const authAPI = {\r\n  login: async (credenciales) => {\r\n    return await apiRequest('/auth/login', {\r\n      method: 'POST',\r\n      body: credenciales,\r\n    });\r\n  },\r\n\r\n  registro: async (datos) => {\r\n    return await apiRequest('/auth/registro', {\r\n      method: 'POST',\r\n      body: datos,\r\n    });\r\n  },\r\n\r\n  obtenerPerfil: async () => {\r\n    return await apiRequest('/auth/perfil');\r\n  },\r\n\r\n  actualizarPerfil: async (datos) => {\r\n    return await apiRequest('/auth/perfil', {\r\n      method: 'PUT',\r\n      body: datos,\r\n    });\r\n  },\r\n};\r\n\r\n// API PEDIDOS\r\nexport const pedidosAPI = {\r\n  obtenerTodos: async (filtros = {}) => {\r\n    const params = new URLSearchParams();\r\n    Object.keys(filtros).forEach(key => {\r\n      if (filtros[key]) params.append(key, filtros[key]);\r\n    });\r\n    \r\n    const endpoint = `/pedidos${params.toString() ? `?${params.toString()}` : ''}`;\r\n    return await apiRequest(endpoint);\r\n  },\r\n\r\n  obtenerPorId: async (id) => {\r\n    return await apiRequest(`/pedidos/${id}`);\r\n  },\r\n\r\n  crear: async (pedido) => {\r\n    return await apiRequest('/pedidos', {\r\n      method: 'POST',\r\n      body: pedido,\r\n    });\r\n  },\r\n\r\n  actualizar: async (id, pedido) => {\r\n    return await apiRequest(`/pedidos/${id}`, {\r\n      method: 'PUT',\r\n      body: pedido,\r\n    });\r\n  },\r\n\r\n  cambiarEstado: async (id, estado) => {\r\n    return await apiRequest(`/pedidos/${id}/estado`, {\r\n      method: 'PUT',\r\n      body: { estado },\r\n    });\r\n  },\r\n};\r\n\r\n// Exportar axios instance para uso directo\r\nexport default api;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}