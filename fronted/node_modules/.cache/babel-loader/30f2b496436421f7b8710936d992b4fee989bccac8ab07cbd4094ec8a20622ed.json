{"ast":null,"code":"import api from './api';\nexport const servicioAuth = {\n  // Iniciar sesión\n  iniciarSesion: async credenciales => {\n    console.log('🚀 Enviando petición de login a:', '/auth/login');\n    console.log('📤 Credenciales enviadas:', {\n      email: credenciales.email,\n      password: '***'\n    });\n    try {\n      const response = await api.post('/auth/login', credenciales);\n      console.log('📥 Respuesta HTTP recibida:', response);\n      console.log('📋 Status:', response.status);\n      console.log('📄 Data:', response.data);\n      console.log('📄 Data type:', typeof response.data);\n      console.log('📄 Data keys:', Object.keys(response.data || {}));\n      console.log('📄 Data stringified:', JSON.stringify(response.data, null, 2));\n      if (response.data && response.data.success) {\n        console.log('🔑 Token recibido, guardando...');\n        localStorage.setItem('token', response.data.data.token);\n      } else if (response.data && response.data.token) {\n        // Estructura actual del backend\n        console.log('🔑 Token recibido (estructura actual), guardando...');\n        localStorage.setItem('token', response.data.token);\n      }\n      return response.data;\n    } catch (error) {\n      console.log('💥 Error en petición HTTP:', error);\n      console.log('📊 Error response:', error.response);\n      throw error;\n    }\n  },\n  // Registrarse\n  registrarse: async datosUsuario => {\n    const response = await api.post('/auth/registro', datosUsuario);\n    return response.data;\n  },\n  // Verificar token\n  verificarToken: async () => {\n    const response = await api.get('/auth/perfil');\n    return response.data;\n  },\n  // Obtener perfil\n  obtenerPerfil: async () => {\n    const response = await api.get('/auth/perfil');\n    return response.data;\n  },\n  // Actualizar perfil\n  actualizarPerfil: async datosPerfil => {\n    const response = await api.put('/auth/perfil', datosPerfil);\n    return response.data;\n  },\n  // Cambiar contraseña\n  cambiarPassword: async passwords => {\n    const response = await api.put('/auth/cambiar-password', passwords);\n    return response.data;\n  },\n  // Cerrar sesión (lógica local)\n  cerrarSesion: () => {\n    localStorage.removeItem('token');\n    window.location.href = '/iniciar-sesion';\n  }\n};","map":{"version":3,"names":["api","servicioAuth","iniciarSesion","credenciales","console","log","email","password","response","post","status","data","Object","keys","JSON","stringify","success","localStorage","setItem","token","error","registrarse","datosUsuario","verificarToken","get","obtenerPerfil","actualizarPerfil","datosPerfil","put","cambiarPassword","passwords","cerrarSesion","removeItem","window","location","href"],"sources":["C:/ferrenuevo/fronted/src/servicios/servicioAuth.js"],"sourcesContent":["import api from './api';\r\n\r\nexport const servicioAuth = {\r\n  // Iniciar sesión\r\n  iniciarSesion: async (credenciales) => {\r\n    console.log('🚀 Enviando petición de login a:', '/auth/login');\r\n    console.log('📤 Credenciales enviadas:', { email: credenciales.email, password: '***' });\r\n    \r\n    try {\r\n      const response = await api.post('/auth/login', credenciales);\r\n      console.log('📥 Respuesta HTTP recibida:', response);\r\n      console.log('📋 Status:', response.status);\r\n      console.log('📄 Data:', response.data);\r\n      console.log('📄 Data type:', typeof response.data);\r\n      console.log('📄 Data keys:', Object.keys(response.data || {}));\r\n      console.log('📄 Data stringified:', JSON.stringify(response.data, null, 2));\r\n      \r\n      if (response.data && response.data.success) {\r\n        console.log('🔑 Token recibido, guardando...');\r\n        localStorage.setItem('token', response.data.data.token);\r\n      } else if (response.data && response.data.token) {\r\n        // Estructura actual del backend\r\n        console.log('🔑 Token recibido (estructura actual), guardando...');\r\n        localStorage.setItem('token', response.data.token);\r\n      }\r\n      return response.data;\r\n    } catch (error) {\r\n      console.log('💥 Error en petición HTTP:', error);\r\n      console.log('📊 Error response:', error.response);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // Registrarse\r\n  registrarse: async (datosUsuario) => {\r\n    const response = await api.post('/auth/registro', datosUsuario);\r\n    return response.data;\r\n  },\r\n\r\n  // Verificar token\r\n  verificarToken: async () => {\r\n    const response = await api.get('/auth/perfil');\r\n    return response.data;\r\n  },\r\n\r\n  // Obtener perfil\r\n  obtenerPerfil: async () => {\r\n    const response = await api.get('/auth/perfil');\r\n    return response.data;\r\n  },\r\n\r\n  // Actualizar perfil\r\n  actualizarPerfil: async (datosPerfil) => {\r\n    const response = await api.put('/auth/perfil', datosPerfil);\r\n    return response.data;\r\n  },\r\n\r\n  // Cambiar contraseña\r\n  cambiarPassword: async (passwords) => {\r\n    const response = await api.put('/auth/cambiar-password', passwords);\r\n    return response.data;\r\n  },\r\n\r\n  // Cerrar sesión (lógica local)\r\n  cerrarSesion: () => {\r\n    localStorage.removeItem('token');\r\n    window.location.href = '/iniciar-sesion';\r\n  },\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}