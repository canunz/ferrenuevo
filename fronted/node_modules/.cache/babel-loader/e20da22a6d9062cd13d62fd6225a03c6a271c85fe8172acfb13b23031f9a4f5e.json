{"ast":null,"code":"import api from'./api';export const servicioAuth={// Iniciar sesión\niniciarSesion:async credenciales=>{console.log('🚀 Enviando petición de login a:','/auth/login');console.log('📤 Credenciales enviadas:',{email:credenciales.email,password:'***'});try{const response=await api.post('/auth/login',credenciales);console.log('📥 Respuesta HTTP recibida:',response);console.log('📋 Status:',response.status);console.log('📄 Data:',response.data);console.log('📄 Data type:',typeof response.data);console.log('📄 Data keys:',Object.keys(response.data||{}));console.log('📄 Data stringified:',JSON.stringify(response.data,null,2));if(response.data&&response.data.success){console.log('🔑 Token recibido, guardando...');localStorage.setItem('token',response.data.data.token);}else if(response.data&&response.data.token){// Estructura actual del backend\nconsole.log('🔑 Token recibido (estructura actual), guardando...');localStorage.setItem('token',response.data.token);}return response.data;}catch(error){console.log('💥 Error en petición HTTP:',error);console.log('📊 Error response:',error.response);throw error;}},// Registrarse\nregistrarse:async datosUsuario=>{const response=await api.post('/auth/registro',datosUsuario);return response.data;},// Verificar token\nverificarToken:async()=>{const response=await api.get('/auth/perfil');return response.data;},// Obtener perfil\nobtenerPerfil:async()=>{const response=await api.get('/auth/perfil');return response.data;},// Actualizar perfil\nactualizarPerfil:async datosPerfil=>{const response=await api.put('/auth/perfil',datosPerfil);return response.data;},// Cambiar contraseña\ncambiarPassword:async passwords=>{const response=await api.put('/auth/cambiar-password',passwords);return response.data;},// Cerrar sesión (lógica local)\ncerrarSesion:()=>{localStorage.removeItem('token');window.location.href='/iniciar-sesion';}};","map":{"version":3,"names":["api","servicioAuth","iniciarSesion","credenciales","console","log","email","password","response","post","status","data","Object","keys","JSON","stringify","success","localStorage","setItem","token","error","registrarse","datosUsuario","verificarToken","get","obtenerPerfil","actualizarPerfil","datosPerfil","put","cambiarPassword","passwords","cerrarSesion","removeItem","window","location","href"],"sources":["C:/ferrenuevo/fronted/src/servicios/servicioAuth.js"],"sourcesContent":["import api from './api';\r\n\r\nexport const servicioAuth = {\r\n  // Iniciar sesión\r\n  iniciarSesion: async (credenciales) => {\r\n    console.log('🚀 Enviando petición de login a:', '/auth/login');\r\n    console.log('📤 Credenciales enviadas:', { email: credenciales.email, password: '***' });\r\n    \r\n    try {\r\n      const response = await api.post('/auth/login', credenciales);\r\n      console.log('📥 Respuesta HTTP recibida:', response);\r\n      console.log('📋 Status:', response.status);\r\n      console.log('📄 Data:', response.data);\r\n      console.log('📄 Data type:', typeof response.data);\r\n      console.log('📄 Data keys:', Object.keys(response.data || {}));\r\n      console.log('📄 Data stringified:', JSON.stringify(response.data, null, 2));\r\n      \r\n      if (response.data && response.data.success) {\r\n        console.log('🔑 Token recibido, guardando...');\r\n        localStorage.setItem('token', response.data.data.token);\r\n      } else if (response.data && response.data.token) {\r\n        // Estructura actual del backend\r\n        console.log('🔑 Token recibido (estructura actual), guardando...');\r\n        localStorage.setItem('token', response.data.token);\r\n      }\r\n      return response.data;\r\n    } catch (error) {\r\n      console.log('💥 Error en petición HTTP:', error);\r\n      console.log('📊 Error response:', error.response);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // Registrarse\r\n  registrarse: async (datosUsuario) => {\r\n    const response = await api.post('/auth/registro', datosUsuario);\r\n    return response.data;\r\n  },\r\n\r\n  // Verificar token\r\n  verificarToken: async () => {\r\n    const response = await api.get('/auth/perfil');\r\n    return response.data;\r\n  },\r\n\r\n  // Obtener perfil\r\n  obtenerPerfil: async () => {\r\n    const response = await api.get('/auth/perfil');\r\n    return response.data;\r\n  },\r\n\r\n  // Actualizar perfil\r\n  actualizarPerfil: async (datosPerfil) => {\r\n    const response = await api.put('/auth/perfil', datosPerfil);\r\n    return response.data;\r\n  },\r\n\r\n  // Cambiar contraseña\r\n  cambiarPassword: async (passwords) => {\r\n    const response = await api.put('/auth/cambiar-password', passwords);\r\n    return response.data;\r\n  },\r\n\r\n  // Cerrar sesión (lógica local)\r\n  cerrarSesion: () => {\r\n    localStorage.removeItem('token');\r\n    window.location.href = '/iniciar-sesion';\r\n  },\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}