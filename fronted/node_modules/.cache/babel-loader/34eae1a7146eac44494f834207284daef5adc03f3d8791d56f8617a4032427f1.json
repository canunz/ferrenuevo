{"ast":null,"code":"import api from'./api';export const servicioFacturas={// Emitir una nueva factura\nemitirFactura:async datos=>{try{const response=await api.post('/facturas/emitir',datos);return response.data;}catch(error){console.error('Error al emitir factura:',error);throw error;}},// Obtener todas las facturas\nobtenerTodas:async function(){let params=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};try{const response=await api.get('/facturas',{params});// El backend devuelve { success, mensaje, data }\n// Necesitamos devolver la estructura completa para que el componente pueda acceder a data\nreturn response.data;}catch(error){console.error('Error al obtener facturas:',error);throw error;}},// Obtener factura por ID\nobtenerPorId:async id=>{try{const response=await api.get(\"/facturas/\".concat(id));return response.data;}catch(error){console.error('Error al obtener factura:',error);throw error;}},// Actualizar estado de factura\nactualizarEstado:async(id,estado)=>{try{const response=await api.put(\"/facturas/\".concat(id,\"/estado\"),{estado});return response.data;}catch(error){console.error('Error al actualizar estado de factura:',error);throw error;}},// Obtener estadísticas de facturas\nobtenerEstadisticas:async function(){let params=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};try{const response=await api.get('/facturas/estadisticas/general',{params});return response.data;}catch(error){console.error('Error al obtener estadísticas:',error);throw error;}},// Obtener facturas por cliente\nobtenerPorCliente:async clienteId=>{try{const response=await api.get('/facturas',{params:{cliente_id:clienteId}});return response.data;}catch(error){console.error('Error al obtener facturas del cliente:',error);throw error;}},// Buscar facturas\nbuscar:async termino=>{try{const response=await api.get('/facturas',{params:{q:termino}});return response.data;}catch(error){console.error('Error al buscar facturas:',error);throw error;}},// Exportar facturas\nexportar:async function(){let filtros=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};try{const response=await api.get('/facturas/exportar',{params:filtros,responseType:'blob'});return response.data;}catch(error){console.error('Error al exportar facturas:',error);throw error;}},// Obtener estados disponibles\nobtenerEstados:()=>{return[{value:'pendiente',label:'Pendiente',color:'yellow'},{value:'pagada',label:'Pagada',color:'green'},{value:'vencida',label:'Vencida',color:'red'},{value:'cancelada',label:'Cancelada',color:'gray'}];},// Formatear número de factura\nformatearNumero:numero=>{return numero||'N/A';},// Formatear fecha\nformatearFecha:fecha=>{if(!fecha)return'N/A';return new Date(fecha).toLocaleDateString('es-CL');},// Formatear moneda\nformatearMoneda:monto=>{if(!monto&&monto!==0)return'N/A';return new Intl.NumberFormat('es-CL',{style:'currency',currency:'CLP'}).format(monto);}};","map":{"version":3,"names":["api","servicioFacturas","emitirFactura","datos","response","post","data","error","console","obtenerTodas","params","arguments","length","undefined","get","obtenerPorId","id","concat","actualizarEstado","estado","put","obtenerEstadisticas","obtenerPorCliente","clienteId","cliente_id","buscar","termino","q","exportar","filtros","responseType","obtenerEstados","value","label","color","formatearNumero","numero","formatearFecha","fecha","Date","toLocaleDateString","formatearMoneda","monto","Intl","NumberFormat","style","currency","format"],"sources":["C:/ferrenuevo/fronted/src/servicios/servicioFacturas.js"],"sourcesContent":["import api from './api';\r\n\r\nexport const servicioFacturas = {\r\n  // Emitir una nueva factura\r\n  emitirFactura: async (datos) => {\r\n    try {\r\n      const response = await api.post('/facturas/emitir', datos);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error al emitir factura:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // Obtener todas las facturas\r\n  obtenerTodas: async (params = {}) => {\r\n    try {\r\n      const response = await api.get('/facturas', { params });\r\n      // El backend devuelve { success, mensaje, data }\r\n      // Necesitamos devolver la estructura completa para que el componente pueda acceder a data\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error al obtener facturas:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // Obtener factura por ID\r\n  obtenerPorId: async (id) => {\r\n    try {\r\n      const response = await api.get(`/facturas/${id}`);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error al obtener factura:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // Actualizar estado de factura\r\n  actualizarEstado: async (id, estado) => {\r\n    try {\r\n      const response = await api.put(`/facturas/${id}/estado`, { estado });\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error al actualizar estado de factura:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // Obtener estadísticas de facturas\r\n  obtenerEstadisticas: async (params = {}) => {\r\n    try {\r\n      const response = await api.get('/facturas/estadisticas/general', { params });\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error al obtener estadísticas:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // Obtener facturas por cliente\r\n  obtenerPorCliente: async (clienteId) => {\r\n    try {\r\n      const response = await api.get('/facturas', { \r\n        params: { cliente_id: clienteId } \r\n      });\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error al obtener facturas del cliente:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // Buscar facturas\r\n  buscar: async (termino) => {\r\n    try {\r\n      const response = await api.get('/facturas', { \r\n        params: { q: termino } \r\n      });\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error al buscar facturas:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // Exportar facturas\r\n  exportar: async (filtros = {}) => {\r\n    try {\r\n      const response = await api.get('/facturas/exportar', { \r\n        params: filtros,\r\n        responseType: 'blob'\r\n      });\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error al exportar facturas:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // Obtener estados disponibles\r\n  obtenerEstados: () => {\r\n    return [\r\n      { value: 'pendiente', label: 'Pendiente', color: 'yellow' },\r\n      { value: 'pagada', label: 'Pagada', color: 'green' },\r\n      { value: 'vencida', label: 'Vencida', color: 'red' },\r\n      { value: 'cancelada', label: 'Cancelada', color: 'gray' }\r\n    ];\r\n  },\r\n\r\n  // Formatear número de factura\r\n  formatearNumero: (numero) => {\r\n    return numero || 'N/A';\r\n  },\r\n\r\n  // Formatear fecha\r\n  formatearFecha: (fecha) => {\r\n    if (!fecha) return 'N/A';\r\n    return new Date(fecha).toLocaleDateString('es-CL');\r\n  },\r\n\r\n  // Formatear moneda\r\n  formatearMoneda: (monto) => {\r\n    if (!monto && monto !== 0) return 'N/A';\r\n    return new Intl.NumberFormat('es-CL', {\r\n      style: 'currency',\r\n      currency: 'CLP'\r\n    }).format(monto);\r\n  }\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}