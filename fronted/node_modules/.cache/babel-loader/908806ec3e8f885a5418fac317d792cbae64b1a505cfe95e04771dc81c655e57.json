{"ast":null,"code":"var _jsxFileName = \"C:\\\\ferrenuevo\\\\fronted\\\\src\\\\contexto\\\\ContextoAuth.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { servicioAuth } from '../servicios/servicioAuth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ContextoAuth = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  const context = useContext(ContextoAuth);\n  if (!context) {\n    throw new Error('useAuth debe ser usado dentro de AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [usuario, setUsuario] = useState(null);\n  const [cargando, setCargando] = useState(true);\n  useEffect(() => {\n    // Verificar si hay un usuario en localStorage\n    const usuarioGuardado = localStorage.getItem('usuario');\n    const tokenGuardado = localStorage.getItem('token');\n    if (usuarioGuardado && tokenGuardado) {\n      setUsuario(JSON.parse(usuarioGuardado));\n    }\n    setCargando(false);\n  }, []);\n  const iniciarSesion = async credenciales => {\n    setCargando(true);\n    try {\n      console.log('🔐 Iniciando proceso de login con credenciales:', credenciales);\n      const res = await servicioAuth.iniciarSesion(credenciales);\n      console.log('📬 Respuesta completa del backend:', res);\n      console.log('✅ Success:', res.success);\n      console.log('📊 Data:', res.data);\n      console.log('🔑 Token:', res.token);\n      console.log('👤 Usuario:', res.usuario);\n\n      // Manejar tanto la estructura nueva {success, data} como la actual {token, usuario}\n      if (res.success && res.data) {\n        // Estructura nueva\n        console.log('🎉 Login exitoso (estructura nueva), guardando datos...');\n        setUsuario(res.data.usuario);\n        localStorage.setItem('usuario', JSON.stringify(res.data.usuario));\n        localStorage.setItem('token', res.data.token);\n        console.log('💾 Datos guardados en localStorage');\n        return {\n          exito: true\n        };\n      } else if (res.token && res.usuario) {\n        // Estructura actual del backend\n        console.log('🎉 Login exitoso (estructura actual), guardando datos...');\n        setUsuario(res.usuario);\n        localStorage.setItem('usuario', JSON.stringify(res.usuario));\n        localStorage.setItem('token', res.token);\n        console.log('💾 Datos guardados en localStorage');\n        return {\n          exito: true\n        };\n      } else {\n        console.log('❌ Login fallido:', res.error || res.message);\n        return {\n          exito: false,\n          mensaje: res.error || res.message || 'Credenciales incorrectas'\n        };\n      }\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.log('💥 Error en el proceso de login:', error);\n      return {\n        exito: false,\n        mensaje: (error === null || error === void 0 ? void 0 : (_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.mensaje) || 'Error en el servidor'\n      };\n    } finally {\n      setCargando(false);\n    }\n  };\n  const registrarse = async datosRegistro => {\n    setCargando(true);\n    try {\n      const res = await servicioAuth.registrarse(datosRegistro);\n      console.log('Respuesta registro backend:', res);\n      if (res.success) {\n        setUsuario({\n          id: res.data.id,\n          nombre: res.data.nombre,\n          email: res.data.email,\n          rol: res.data.rol\n        });\n        localStorage.setItem('usuario', JSON.stringify({\n          id: res.data.id,\n          nombre: res.data.nombre,\n          email: res.data.email,\n          rol: res.data.rol\n        }));\n        localStorage.setItem('token', res.data.token || '');\n        return {\n          exito: true\n        };\n      } else {\n        return {\n          exito: false,\n          mensaje: res.error || res.message || 'Error en el registro'\n        };\n      }\n    } catch (error) {\n      return {\n        exito: false,\n        mensaje: 'Error en el registro'\n      };\n    } finally {\n      setCargando(false);\n    }\n  };\n  const cerrarSesion = () => {\n    setUsuario(null);\n    localStorage.removeItem('usuario');\n    localStorage.removeItem('token');\n  };\n  const valor = {\n    usuario,\n    cargando,\n    iniciarSesion,\n    registrarse,\n    cerrarSesion\n  };\n  return /*#__PURE__*/_jsxDEV(ContextoAuth.Provider, {\n    value: valor,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"S8/JCBTkVpYKJ/1lvIrTttILOk8=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","servicioAuth","jsxDEV","_jsxDEV","ContextoAuth","useAuth","_s","context","Error","AuthProvider","children","_s2","usuario","setUsuario","cargando","setCargando","usuarioGuardado","localStorage","getItem","tokenGuardado","JSON","parse","iniciarSesion","credenciales","console","log","res","success","data","token","setItem","stringify","exito","error","message","mensaje","_error$response","_error$response$data","response","registrarse","datosRegistro","id","nombre","email","rol","cerrarSesion","removeItem","valor","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/ferrenuevo/fronted/src/contexto/ContextoAuth.jsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport { servicioAuth } from '../servicios/servicioAuth';\r\n\r\nconst ContextoAuth = createContext();\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(ContextoAuth);\r\n  if (!context) {\r\n    throw new Error('useAuth debe ser usado dentro de AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [usuario, setUsuario] = useState(null);\r\n  const [cargando, setCargando] = useState(true);\r\n\r\n  useEffect(() => {\r\n    // Verificar si hay un usuario en localStorage\r\n    const usuarioGuardado = localStorage.getItem('usuario');\r\n    const tokenGuardado = localStorage.getItem('token');\r\n    \r\n    if (usuarioGuardado && tokenGuardado) {\r\n      setUsuario(JSON.parse(usuarioGuardado));\r\n    }\r\n    \r\n    setCargando(false);\r\n  }, []);\r\n\r\n  const iniciarSesion = async (credenciales) => {\r\n    setCargando(true);\r\n    try {\r\n      console.log('🔐 Iniciando proceso de login con credenciales:', credenciales);\r\n      const res = await servicioAuth.iniciarSesion(credenciales);\r\n      console.log('📬 Respuesta completa del backend:', res);\r\n      console.log('✅ Success:', res.success);\r\n      console.log('📊 Data:', res.data);\r\n      console.log('🔑 Token:', res.token);\r\n      console.log('👤 Usuario:', res.usuario);\r\n      \r\n      // Manejar tanto la estructura nueva {success, data} como la actual {token, usuario}\r\n      if (res.success && res.data) {\r\n        // Estructura nueva\r\n        console.log('🎉 Login exitoso (estructura nueva), guardando datos...');\r\n        setUsuario(res.data.usuario);\r\n        localStorage.setItem('usuario', JSON.stringify(res.data.usuario));\r\n        localStorage.setItem('token', res.data.token);\r\n        console.log('💾 Datos guardados en localStorage');\r\n        return { exito: true };\r\n      } else if (res.token && res.usuario) {\r\n        // Estructura actual del backend\r\n        console.log('🎉 Login exitoso (estructura actual), guardando datos...');\r\n        setUsuario(res.usuario);\r\n        localStorage.setItem('usuario', JSON.stringify(res.usuario));\r\n        localStorage.setItem('token', res.token);\r\n        console.log('💾 Datos guardados en localStorage');\r\n        return { exito: true };\r\n      } else {\r\n        console.log('❌ Login fallido:', res.error || res.message);\r\n        return { exito: false, mensaje: res.error || res.message || 'Credenciales incorrectas' };\r\n      }\r\n    } catch (error) {\r\n      console.log('💥 Error en el proceso de login:', error);\r\n      return { exito: false, mensaje: error?.response?.data?.mensaje || 'Error en el servidor' };\r\n    } finally {\r\n      setCargando(false);\r\n    }\r\n  };\r\n\r\n  const registrarse = async (datosRegistro) => {\r\n    setCargando(true);\r\n    try {\r\n      const res = await servicioAuth.registrarse(datosRegistro);\r\n      console.log('Respuesta registro backend:', res);\r\n      if (res.success) {\r\n        setUsuario({\r\n          id: res.data.id,\r\n          nombre: res.data.nombre,\r\n          email: res.data.email,\r\n          rol: res.data.rol\r\n        });\r\n        localStorage.setItem('usuario', JSON.stringify({\r\n          id: res.data.id,\r\n          nombre: res.data.nombre,\r\n          email: res.data.email,\r\n          rol: res.data.rol\r\n        }));\r\n        localStorage.setItem('token', res.data.token || '');\r\n        return { exito: true };\r\n      } else {\r\n        return { exito: false, mensaje: res.error || res.message || 'Error en el registro' };\r\n      }\r\n    } catch (error) {\r\n      return { exito: false, mensaje: 'Error en el registro' };\r\n    } finally {\r\n      setCargando(false);\r\n    }\r\n  };\r\n\r\n  const cerrarSesion = () => {\r\n    setUsuario(null);\r\n    localStorage.removeItem('usuario');\r\n    localStorage.removeItem('token');\r\n  };\r\n\r\n  const valor = {\r\n    usuario,\r\n    cargando,\r\n    iniciarSesion,\r\n    registrarse,\r\n    cerrarSesion\r\n  };\r\n\r\n  return (\r\n    <ContextoAuth.Provider value={valor}>\r\n      {children}\r\n    </ContextoAuth.Provider>\r\n  );\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}