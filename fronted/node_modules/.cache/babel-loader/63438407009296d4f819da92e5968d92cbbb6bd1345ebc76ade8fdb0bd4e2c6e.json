{"ast":null,"code":"export const generarID = () => {\n  return Math.random().toString(36).substr(2, 9);\n};\nexport const slugify = texto => {\n  return texto.toLowerCase().trim().replace(/[áàäâã]/g, 'a').replace(/[éèëê]/g, 'e').replace(/[íìïî]/g, 'i').replace(/[óòöôõ]/g, 'o').replace(/[úùüû]/g, 'u').replace(/[ñ]/g, 'n').replace(/[^\\w\\s-]/g, '').replace(/[\\s_-]+/g, '-').replace(/^-+|-+$/g, '');\n};\nexport const capitalizar = texto => {\n  if (!texto) return '';\n  return texto.charAt(0).toUpperCase() + texto.slice(1).toLowerCase();\n};\nexport const truncarTexto = (texto, longitud = 100) => {\n  if (!texto || texto.length <= longitud) return texto;\n  return texto.slice(0, longitud).trim() + '...';\n};\nexport const obtenerIniciales = nombre => {\n  if (!nombre) return '';\n  return nombre.split(' ').map(palabra => palabra.charAt(0)).join('').toUpperCase().slice(0, 2);\n};\nexport const calcularPorcentaje = (valor, total) => {\n  if (total === 0) return 0;\n  return valor / total * 100;\n};\nexport const debounce = (func, delay) => {\n  let timeoutId;\n  return (...args) => {\n    clearTimeout(timeoutId);\n    timeoutId = setTimeout(() => func.apply(null, args), delay);\n  };\n};\nexport const throttle = (func, limit) => {\n  let inThrottle;\n  return function () {\n    const args = arguments;\n    const context = this;\n    if (!inThrottle) {\n      func.apply(context, args);\n      inThrottle = true;\n      setTimeout(() => inThrottle = false, limit);\n    }\n  };\n};\nexport const descargarArchivo = (data, filename, type = 'text/plain') => {\n  const blob = new Blob([data], {\n    type\n  });\n  const url = window.URL.createObjectURL(blob);\n  const link = document.createElement('a');\n  link.href = url;\n  link.download = filename;\n  document.body.appendChild(link);\n  link.click();\n  document.body.removeChild(link);\n  window.URL.revokeObjectURL(url);\n};\nexport const copiarAlPortapapeles = async texto => {\n  try {\n    await navigator.clipboard.writeText(texto);\n    return true;\n  } catch (error) {\n    console.error('Error al copiar al portapapeles:', error);\n    return false;\n  }\n};\nexport const obtenerParametrosURL = () => {\n  return new URLSearchParams(window.location.search);\n};\nexport const construirURL = (base, parametros = {}) => {\n  const url = new URL(base);\n  Object.keys(parametros).forEach(key => {\n    if (parametros[key] !== null && parametros[key] !== undefined) {\n      url.searchParams.append(key, parametros[key]);\n    }\n  });\n  return url.toString();\n};\n\n/**\r\n * Obtiene la URL correcta para una imagen de producto\r\n * @param {string} imagen - Nombre del archivo de imagen\r\n * @param {string} tipo - Tipo de imagen ('productos', 'marcas', 'categorias', etc.)\r\n * @returns {string} URL completa de la imagen\r\n */\nexport const obtenerImagenUrl = (imagen, tipo = 'productos') => {\n  if (!imagen) {\n    return `/assets/imagenes/${tipo}/placeholder.jpg`;\n  }\n\n  // Si la imagen ya es una URL externa, úsala tal cual\n  if (imagen.startsWith('http')) {\n    return imagen;\n  }\n\n  // Usar el backend correcto en desarrollo\n  if (process.env.NODE_ENV === 'development') {\n    return `http://localhost:3003/public/imagenes/${tipo}/${imagen}`;\n  }\n\n  // En producción, usar la ruta local\n  return `/assets/imagenes/${tipo}/${imagen}`;\n};\n\n/**\r\n * Obtiene la URL de una imagen de producto específicamente\r\n * @param {string} imagen - Nombre del archivo de imagen\r\n * @returns {string} URL completa de la imagen\r\n */\nexport const obtenerImagenProducto = imagen => {\n  return obtenerImagenUrl(imagen, 'productos');\n};\n\n/**\r\n * Obtiene la URL de una imagen de marca específicamente\r\n * @param {string} imagen - Nombre del archivo de imagen\r\n * @returns {string} URL completa de la imagen\r\n */\nexport const obtenerImagenMarca = imagen => {\n  return obtenerImagenUrl(imagen, 'marcas');\n};","map":{"version":3,"names":["generarID","Math","random","toString","substr","slugify","texto","toLowerCase","trim","replace","capitalizar","charAt","toUpperCase","slice","truncarTexto","longitud","length","obtenerIniciales","nombre","split","map","palabra","join","calcularPorcentaje","valor","total","debounce","func","delay","timeoutId","args","clearTimeout","setTimeout","apply","throttle","limit","inThrottle","arguments","context","descargarArchivo","data","filename","type","blob","Blob","url","window","URL","createObjectURL","link","document","createElement","href","download","body","appendChild","click","removeChild","revokeObjectURL","copiarAlPortapapeles","navigator","clipboard","writeText","error","console","obtenerParametrosURL","URLSearchParams","location","search","construirURL","base","parametros","Object","keys","forEach","key","undefined","searchParams","append","obtenerImagenUrl","imagen","tipo","startsWith","process","env","NODE_ENV","obtenerImagenProducto","obtenerImagenMarca"],"sources":["C:/ferrenuevo/fronted/src/utilidades/ayudantes.js"],"sourcesContent":["export const generarID = () => {\r\n    return Math.random().toString(36).substr(2, 9);\r\n  };\r\n  \r\n  export const slugify = (texto) => {\r\n    return texto\r\n      .toLowerCase()\r\n      .trim()\r\n      .replace(/[áàäâã]/g, 'a')\r\n      .replace(/[éèëê]/g, 'e')\r\n      .replace(/[íìïî]/g, 'i')\r\n      .replace(/[óòöôõ]/g, 'o')\r\n      .replace(/[úùüû]/g, 'u')\r\n      .replace(/[ñ]/g, 'n')\r\n      .replace(/[^\\w\\s-]/g, '')\r\n      .replace(/[\\s_-]+/g, '-')\r\n      .replace(/^-+|-+$/g, '');\r\n  };\r\n  \r\n  export const capitalizar = (texto) => {\r\n    if (!texto) return '';\r\n    return texto.charAt(0).toUpperCase() + texto.slice(1).toLowerCase();\r\n  };\r\n  \r\n  export const truncarTexto = (texto, longitud = 100) => {\r\n    if (!texto || texto.length <= longitud) return texto;\r\n    return texto.slice(0, longitud).trim() + '...';\r\n  };\r\n  \r\n  export const obtenerIniciales = (nombre) => {\r\n    if (!nombre) return '';\r\n    return nombre\r\n      .split(' ')\r\n      .map(palabra => palabra.charAt(0))\r\n      .join('')\r\n      .toUpperCase()\r\n      .slice(0, 2);\r\n  };\r\n  \r\n  export const calcularPorcentaje = (valor, total) => {\r\n    if (total === 0) return 0;\r\n    return (valor / total) * 100;\r\n  };\r\n  \r\n  export const debounce = (func, delay) => {\r\n    let timeoutId;\r\n    return (...args) => {\r\n      clearTimeout(timeoutId);\r\n      timeoutId = setTimeout(() => func.apply(null, args), delay);\r\n    };\r\n  };\r\n  \r\n  export const throttle = (func, limit) => {\r\n    let inThrottle;\r\n    return function() {\r\n      const args = arguments;\r\n      const context = this;\r\n      if (!inThrottle) {\r\n        func.apply(context, args);\r\n        inThrottle = true;\r\n        setTimeout(() => inThrottle = false, limit);\r\n      }\r\n    };\r\n  };\r\n  \r\n  export const descargarArchivo = (data, filename, type = 'text/plain') => {\r\n    const blob = new Blob([data], { type });\r\n    const url = window.URL.createObjectURL(blob);\r\n    const link = document.createElement('a');\r\n    link.href = url;\r\n    link.download = filename;\r\n    document.body.appendChild(link);\r\n    link.click();\r\n    document.body.removeChild(link);\r\n    window.URL.revokeObjectURL(url);\r\n  };\r\n  \r\n  export const copiarAlPortapapeles = async (texto) => {\r\n    try {\r\n      await navigator.clipboard.writeText(texto);\r\n      return true;\r\n    } catch (error) {\r\n      console.error('Error al copiar al portapapeles:', error);\r\n      return false;\r\n    }\r\n  };\r\n  \r\n  export const obtenerParametrosURL = () => {\r\n    return new URLSearchParams(window.location.search);\r\n  };\r\n  \r\n  export const construirURL = (base, parametros = {}) => {\r\n    const url = new URL(base);\r\n    Object.keys(parametros).forEach(key => {\r\n      if (parametros[key] !== null && parametros[key] !== undefined) {\r\n        url.searchParams.append(key, parametros[key]);\r\n      }\r\n    });\r\n    return url.toString();\r\n  };\r\n  \r\n  /**\r\n   * Obtiene la URL correcta para una imagen de producto\r\n   * @param {string} imagen - Nombre del archivo de imagen\r\n   * @param {string} tipo - Tipo de imagen ('productos', 'marcas', 'categorias', etc.)\r\n   * @returns {string} URL completa de la imagen\r\n   */\r\n  export const obtenerImagenUrl = (imagen, tipo = 'productos') => {\r\n    if (!imagen) {\r\n      return `/assets/imagenes/${tipo}/placeholder.jpg`;\r\n    }\r\n    \r\n    // Si la imagen ya es una URL externa, úsala tal cual\r\n    if (imagen.startsWith('http')) {\r\n      return imagen;\r\n    }\r\n    \r\n    // Usar el backend correcto en desarrollo\r\n    if (process.env.NODE_ENV === 'development') {\r\n      return `http://localhost:3003/public/imagenes/${tipo}/${imagen}`;\r\n    }\r\n    \r\n    // En producción, usar la ruta local\r\n    return `/assets/imagenes/${tipo}/${imagen}`;\r\n  };\r\n  \r\n  /**\r\n   * Obtiene la URL de una imagen de producto específicamente\r\n   * @param {string} imagen - Nombre del archivo de imagen\r\n   * @returns {string} URL completa de la imagen\r\n   */\r\n  export const obtenerImagenProducto = (imagen) => {\r\n    return obtenerImagenUrl(imagen, 'productos');\r\n  };\r\n  \r\n  /**\r\n   * Obtiene la URL de una imagen de marca específicamente\r\n   * @param {string} imagen - Nombre del archivo de imagen\r\n   * @returns {string} URL completa de la imagen\r\n   */\r\n  export const obtenerImagenMarca = (imagen) => {\r\n    return obtenerImagenUrl(imagen, 'marcas');\r\n  };\r\n  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}